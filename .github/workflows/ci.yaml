name: Continuous Integration

on:
  push:
    branches: [ master, main ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    name: Test on Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Run unit tests
        run: |
          pytest tests/unit/ -v --tb=short

      - name: Run integration tests
        run: |
          pytest tests/integration/ -v --tb=short

      - name: Run contract tests
        run: |
          pytest tests/contract/ -v --tb=short

      - name: Run e2e tests
        run: |
          pytest tests/e2e/ -v --tb=short

      - name: Run all tests with coverage
        run: |
          pytest tests/ --cov=ch_filing --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-cli:
    name: Test CLI commands
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Test ch-filing CLI
        run: |
          ch-filing --help
          python -m ch_filing --help

      - name: Test ch-mock-server CLI
        run: |
          ch-mock-server --help
          python -m ch_filing.test_server --help

      - name: Test mock server startup and shutdown
        run: |
          # Start mock server in background
          python -m ch_filing.test_server --port 9999 &
          SERVER_PID=$!
          sleep 3
          
          # Test that server is responding (this will fail but that's expected without proper request)
          curl -f http://localhost:9999/v1-0/xmlgw/Gateway || echo "Server is running and rejecting invalid requests (expected)"
          
          # Clean up
          kill $SERVER_PID || echo "Server already stopped"

      - name: Test package installation
        run: |
          python -c "import ch_filing; print('Package imported successfully')"
          python -c "from ch_filing.client import Client; print('Client imported successfully')"
          python -c "from ch_filing.test_server import MockServer; print('MockServer imported successfully')"

  compatibility:
    name: Test Python compatibility
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.12', '3.13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Run core tests
        run: |
          pytest tests/unit/ tests/integration/test_client_server_workflow.py -v --tb=short

      - name: Test package installation
        run: |
          python -c "import ch_filing; print('Package imported successfully on Python ${{ matrix.python-version }}')"

